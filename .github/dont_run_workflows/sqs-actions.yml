name: SQS actions

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-southeast-1 # set this to your preferred AWS region, e.g. us-west-1

jobs:
  CICD:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v6
        with:
          context: ./flask-sqs-app
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_SQS }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_SQS }}:latest
          platforms: linux/amd64
          provenance: false
#     To test workflow
#      - name: Download task definition
#        run: |
#          aws ecs describe-task-definition --task-definition ${{ vars.TASK_DEF_SQS }} --query taskDefinition > task-definition.json
#
#      - name: Fill in the new image ID in the Amazon ECS task definition
#        id: task-def
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: task-definition.json
#          container-name: ${{ vars.CONTAINER_NAME_SQS }}
#          image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_SQS }}:${{ github.sha }}
#
#      - name: Deploy Amazon ECS task definition
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.task-def.outputs.task-definition }}
#          service: ${{ vars.ECS_SERVICE_SQS }}
#          cluster: ${{ vars.ECS_CLUSTER_SQS }}
#          wait-for-service-stability: true
